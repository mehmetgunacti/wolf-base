@mixin mx-padding($values...) {

	// if 1st parameter is not a key-value map
	@if length($values)==1 and type-of(nth($values, 1)) != 'map' {

		$value : nth($values, 1);
		@if isCSSVar($value) {

			padding: fn-var($value);

		} @else {

			padding: #{$value};

		}

	} @else {

		$top	: null;
		$right	: null;
		$bottom	: null;
		$left	: null;

		@each $map in $values {

			@each $key, $value in $map {

				@if isCSSVar($value) { $value: fn-var($value); }
				@if $key == top { $top: $value; }
				@else if $key == right { $right: $value; }
				@else if $key == bottom { $bottom: $value; }
				@else if $key == left { $left: $value; }

			}

		}

		@if $top != null and $right != null and $bottom != null and $left != null {

			padding: $top $right $bottom $left;

		} @else {

			@if $top !=null 	{ padding-top: $top; }
			@if $right !=null	{ padding-right: $right; }
			@if $bottom !=null	{ padding-bottom: $bottom; }
			@if $left !=null	{ padding-left: $left; }

		}

	}

}

@mixin mx-p-xxl		{ @include mx-padding($gap-xxl); }
@mixin mx-p-xl		{ @include mx-padding($gap-xl); }
@mixin mx-p-lg		{ @include mx-padding($gap-lg); }
@mixin mx-p			{ @include mx-padding($gap); }
@mixin mx-p-sm		{ @include mx-padding($gap-sm); }
@mixin mx-p-xs		{ @include mx-padding($gap-xs); }
@mixin mx-p-xxs		{ @include mx-padding($gap-xxs); }
@mixin mx-p-0		{ @include mx-padding($zero); }
@mixin mx-p-auto	{ @include mx-padding($auto); }

// mr
@mixin mx-pr-xxl	{ @include mx-padding((right: $gap-xxl)); }
@mixin mx-pr-xl		{ @include mx-padding((right: $gap-xl)); }
@mixin mx-pr-lg		{ @include mx-padding((right: $gap-lg)); }
@mixin mx-pr		{ @include mx-padding((right: $gap)); }
@mixin mx-pr-sm		{ @include mx-padding((right: $gap-sm)); }
@mixin mx-pr-xs		{ @include mx-padding((right: $gap-xs)); }
@mixin mx-pr-xxs	{ @include mx-padding((right: $gap-xxs)); }
@mixin mx-pr-0		{ @include mx-padding((right: $zero)); }
@mixin mx-pr-auto	{ @include mx-padding((right: $auto)); }

// ml
@mixin mx-pl-xxl	{ @include mx-padding((left: $gap-xxl)); }
@mixin mx-pl-xl		{ @include mx-padding((left: $gap-xl)); }
@mixin mx-pl-lg		{ @include mx-padding((left: $gap-lg)); }
@mixin mx-pl		{ @include mx-padding((left: $gap)); }
@mixin mx-pl-sm		{ @include mx-padding((left: $gap-sm)); }
@mixin mx-pl-xs		{ @include mx-padding((left: $gap-xs)); }
@mixin mx-pl-xxs	{ @include mx-padding((left: $gap-xxs)); }
@mixin mx-pl-0		{ @include mx-padding((left: $zero)); }
@mixin mx-pl-auto	{ @include mx-padding((left: $auto)); }

// mt
@mixin mx-pt-xxl	{ @include mx-padding((top: $gap-xxl)); }
@mixin mx-pt-xl		{ @include mx-padding((top: $gap-xl)); }
@mixin mx-pt-lg		{ @include mx-padding((top: $gap-lg)); }
@mixin mx-pt		{ @include mx-padding((top: $gap)); }
@mixin mx-pt-sm		{ @include mx-padding((top: $gap-sm)); }
@mixin mx-pt-xs		{ @include mx-padding((top: $gap-xs)); }
@mixin mx-pt-xxs	{ @include mx-padding((top: $gap-xxs)); }
@mixin mx-pt-0		{ @include mx-padding((top: $zero)); }
@mixin mx-pt-auto	{ @include mx-padding((top: $auto)); }

// mb
@mixin mx-pb-xxl	{ @include mx-padding((bottom: $gap-xxl)); }
@mixin mx-pb-xl		{ @include mx-padding((bottom: $gap-xl)); }
@mixin mx-pb-lg		{ @include mx-padding((bottom: $gap-lg)); }
@mixin mx-pb		{ @include mx-padding((bottom: $gap)); }
@mixin mx-pb-sm		{ @include mx-padding((bottom: $gap-sm)); }
@mixin mx-pb-xs		{ @include mx-padding((bottom: $gap-xs)); }
@mixin mx-pb-xxs	{ @include mx-padding((bottom: $gap-xxs)); }
@mixin mx-pb-0		{ @include mx-padding((bottom: $zero)); }
@mixin mx-pb-auto	{ @include mx-padding((bottom: $auto)); }
