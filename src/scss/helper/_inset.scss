@mixin mx-inset($values...) {

	// if 1st parameter is not a key-value map
	@if length($values)==1 and type-of(nth($values, 1)) != 'map' {

		$value : nth($values, 1);
		@if isCSSVar($value) {

			inset: fn-var($value);

		} @else {

			inset: #{$value};

		}

	} @else {

		$top	: null;
		$right	: null;
		$bottom	: null;
		$left	: null;

		@each $map in $values {

			@each $key, $value in $map {

				@if isCSSVar($value) { $value: fn-var($value); }
				@if $key == top { $top: $value; }
				@else if $key == right { $right: $value; }
				@else if $key == bottom { $bottom: $value; }
				@else if $key == left { $left: $value; }

			}

		}

		@if $top != null and $right != null and $bottom != null and $left != null {

			inset: $top $right $bottom $left;

		} @else {

			@if $top !=null { top: $top; }
			@if $right !=null { right: $right; }
			@if $bottom !=null { bottom: $bottom; }
			@if $left !=null { left: $left; }

		}

	}

}

@mixin mx-inset1($default, $values: ()) {

	@if length($values) == 0 {

		inset: if($default == $zero, $zero, if($default == $auto, $auto, fn-var($default)));

	} @else {

		$top	: if($default == $zero, $zero, if($default == $auto, $auto, fn-var($default)));
		$right	: if($default == $zero, $zero, if($default == $auto, $auto, fn-var($default)));
		$bottom	: if($default == $zero, $zero, if($default == $auto, $auto, fn-var($default)));
		$left	: if($default == $zero, $zero, if($default == $auto, $auto, fn-var($default)));

		@each $key, $value in $values {

			@if $key == top			{ $top		: if($value == $zero, $zero, if($value == $auto, $auto, fn-var($value))); }
			@else if $key == right	{ $right	: if($value == $zero, $zero, if($value == $auto, $auto, fn-var($value))); }
			@else if $key == bottom	{ $bottom	: if($value == $zero, $zero, if($value == $auto, $auto, fn-var($value))); }
			@else if $key == left	{ $left		: if($value == $zero, $zero, if($value == $auto, $auto, fn-var($value))); }

		}
		inset: #{$top} #{$right} #{$bottom} #{$left};

	}

}
