@mixin mx-margin($values...) {

	// if 1st parameter is not a key-value map
	@if length($values)==1 and type-of(nth($values, 1)) != 'map' {

		$value : nth($values, 1);
		@if isCSSVar($value) {

			margin: fn-var($value);

		} @else {

			margin: #{$value};

		}

	} @else {

		$top	: null;
		$right	: null;
		$bottom	: null;
		$left	: null;

		@each $map in $values {

			@each $key, $value in $map {

				@if isCSSVar($value) { $value: fn-var($value); }
				@if $key == top { $top: $value; }
				@else if $key == right { $right: $value; }
				@else if $key == bottom { $bottom: $value; }
				@else if $key == left { $left: $value; }

			}

		}

		@if $top != null and $right != null and $bottom != null and $left != null {

			margin: $top $right $bottom $left;

		} @else {

			@if $top !=null 	{ margin-top: $top; }
			@if $right !=null	{ margin-right: $right; }
			@if $bottom !=null	{ margin-bottom: $bottom; }
			@if $left !=null	{ margin-left: $left; }

		}

	}

}

@mixin mx-m-xxl		{ @include mx-margin($gap-xxl); }
@mixin mx-m-xl		{ @include mx-margin($gap-xl); }
@mixin mx-m-lg		{ @include mx-margin($gap-lg); }
@mixin mx-m			{ @include mx-margin($gap); }
@mixin mx-m-sm		{ @include mx-margin($gap-sm); }
@mixin mx-m-xs		{ @include mx-margin($gap-xs); }
@mixin mx-m-xxs		{ @include mx-margin($gap-xxs); }
@mixin mx-m-0		{ @include mx-margin($zero); }
@mixin mx-m-auto	{ @include mx-margin($auto); }

// mr
@mixin mx-mr-xxl	{ @include mx-margin((right: $gap-xxl)); }
@mixin mx-mr-xl		{ @include mx-margin((right: $gap-xl)); }
@mixin mx-mr-lg		{ @include mx-margin((right: $gap-lg)); }
@mixin mx-mr		{ @include mx-margin((right: $gap)); }
@mixin mx-mr-sm		{ @include mx-margin((right: $gap-sm)); }
@mixin mx-mr-xs		{ @include mx-margin((right: $gap-xs)); }
@mixin mx-mr-xxs	{ @include mx-margin((right: $gap-xxs)); }
@mixin mx-mr-0		{ @include mx-margin((right: $zero)); }
@mixin mx-mr-auto	{ @include mx-margin((right: $auto)); }

// ml
@mixin mx-ml-xxl	{ @include mx-margin((left: $gap-xxl)); }
@mixin mx-ml-xl		{ @include mx-margin((left: $gap-xl)); }
@mixin mx-ml-lg		{ @include mx-margin((left: $gap-lg)); }
@mixin mx-ml		{ @include mx-margin((left: $gap)); }
@mixin mx-ml-sm		{ @include mx-margin((left: $gap-sm)); }
@mixin mx-ml-xs		{ @include mx-margin((left: $gap-xs)); }
@mixin mx-ml-xxs	{ @include mx-margin((left: $gap-xxs)); }
@mixin mx-ml-0		{ @include mx-margin((left: $zero)); }
@mixin mx-ml-auto	{ @include mx-margin((left: $auto)); }

// mt
@mixin mx-mt-xxl	{ @include mx-margin((top: $gap-xxl)); }
@mixin mx-mt-xl		{ @include mx-margin((top: $gap-xl)); }
@mixin mx-mt-lg		{ @include mx-margin((top: $gap-lg)); }
@mixin mx-mt		{ @include mx-margin((top: $gap)); }
@mixin mx-mt-sm		{ @include mx-margin((top: $gap-sm)); }
@mixin mx-mt-xs		{ @include mx-margin((top: $gap-xs)); }
@mixin mx-mt-xxs	{ @include mx-margin((top: $gap-xxs)); }
@mixin mx-mt-0		{ @include mx-margin((top: $zero)); }
@mixin mx-mt-auto	{ @include mx-margin((top: $auto)); }

// mb
@mixin mx-mb-xxl	{ @include mx-margin((bottom: $gap-xxl)); }
@mixin mx-mb-xl		{ @include mx-margin((bottom: $gap-xl)); }
@mixin mx-mb-lg		{ @include mx-margin((bottom: $gap-lg)); }
@mixin mx-mb		{ @include mx-margin((bottom: $gap)); }
@mixin mx-mb-sm		{ @include mx-margin((bottom: $gap-sm)); }
@mixin mx-mb-xs		{ @include mx-margin((bottom: $gap-xs)); }
@mixin mx-mb-xxs	{ @include mx-margin((bottom: $gap-xxs)); }
@mixin mx-mb-0		{ @include mx-margin((bottom: $zero)); }
@mixin mx-mb-auto	{ @include mx-margin((bottom: $auto)); }
