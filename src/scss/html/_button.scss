@use "sass:string";

$_prefix			: btn;

$_button-height		: 3.5rem;
$_button-height-sm	: 2.7rem;
$_button-height-xs	: 2.2rem;
$_button-height-xxs	: 1.8rem;

$_button-gap		: 0.9rem;
$_button-gap-sm		: 0.8rem;
$_button-gap-xs		: 0.7rem;
$_button-gap-xxs	: 0.6rem;

$_button-properties	: (

	"--color"				: fn-var($col-primary-text),
	"--background-color"	: fn-var($col-primary),
	"--border-color"		: fn-var($col-primary-border),

	"--height"			: $_button-height,

	"--padding-inline"	: $_button-gap,
	"--font-size"		: $font-size,
	"--border-radius"	: $border-radius,

	"color"				: "--",
	"background-color"	: "--",
	"border-color"		: "--",

	"height"			: "--",
	"line-height"		: "--height",

	"padding-inline"	: "--",
	"font-size"			: "--",
	"border-radius"		: "--",

	"gap"				: $gap-05,
	"text-align"		: center,
	"text-decoration"	: none,
	"white-space"		: nowrap,
	"background-image"	: none,
	"border-width"		: 1px,
	"border-style"		: solid,
	"cursor"			: pointer,

	hover: (
		"--background-color"	: fn-var($col-primary-hover)
	),

	active: (
		"--background-color"	: fn-var($col-primary-active)
	),

	disabled: (
		"--color"				: fn-var($col-disabled-text),
		"--background-color"	: fn-var($col-disabled),
		"--border-color"		: fn-var($col-transparent),
		cursor					: not-allowed,

		hover: (
			"--background-color"	: fn-var($col-transparent)
		),

		active: (
			"--background-color"	: fn-var($col-transparent)
		)

	),
	sm : (
		"--height"			: $_button-height-sm,
		"--padding-inline"	: $_button-gap-sm,
		"--font-size"		: $font-size-sm,
		"--border-radius"	: $border-radius-sm,
	),
	xs : (
		"--height"			: $_button-height-xs,
		"--padding-inline"	: $_button-gap-xs,
		"--font-size"		: $font-size-xs,
		"--border-radius"	: $border-radius-sm,
	),
	info : (
		"--color"				: fn-var($col-info-text),
		"--background-color"	: fn-var($col-info),
		"--border-color"		: fn-var($col-info-border),
		hover: (
			"--background-color"	: fn-var($col-info-hover)
		),

		active: (
			"--background-color"	: fn-var($col-info-active)
		)
	),
	warn: (
		"--color"				: fn-var($col-warn-text),
		"--background-color"	: fn-var($col-warn),
		"--border-color"		: fn-var($col-warn-border),
		hover: (
			"--background-color"	: fn-var($col-warn-hover)
		),
		active: (
			"--background-color"	: fn-var($col-warn-active)
		)
	),
	danger: (
		"--color"				: fn-var($col-error-text),
		"--background-color"	: fn-var($col-error),
		"--border-color"		: fn-var($col-error-border),
		hover: (
			"--background-color"	: fn-var($col-error-hover)
		),
		active: (
			"--background-color"	: fn-var($col-error-active)
		)
	),
	ghost: (
		"--background-color"	: fn-var($col-transparent),
		"--border-color"		: fn-var($col-transparent),
		hover: (
			"--background-color"	: fn-var($col-hover)
		),
		active: (
			"--background-color"	: fn-var($col-active)
		)
	),
	link: (
		"--background-color"	: fn-var($col-transparent),
		"--border-color"		: fn-var($col-transparent),
		"--color"				: fn-var($col-info),
		hover: (
			"--background-color"	: fn-var($col-transparent),
			"--color"				: fn-var($col-info-hover),
			"text-decoration"		: underline
		),
		active: (
			"--background-color"	: fn-var($col-transparent),
			"text-decoration"		: underline,
		)
	),
	glyph: (
		"--background-color"	: fn-var($col-transparent),
		"--border-color"		: fn-var($col-transparent),
		"--border-radius"		: $border-radius-round,
		"width"					: "--height",
		squared: (
			"--border-radius"		: $border-radius-sm,
		),
		hover: (
			"--background-color"	: fn-var($col-hover)
		),
		active: (
			"--background-color"	: fn-var($col-active)
		)
	),
	tag: (
		"--background-color"	: fn-var($col-accent),
		"--border-color"		: fn-var($col-transparent),
		"--border-radius"		: $border-radius-round,
		"--height"				: $_button-height-sm,
		"--padding-inline"		: $_button-gap,
		"--font-size"			: $font-size-sm,
		hover: (
			"--background-color"	: fn-var($col-info-hover)
		),
		active: (
			"--background-color"	: fn-var($col-info-active)
		),
		sm: (
			"--height"			: $_button-height-xs,
			"--padding-inline"	: $_button-gap-xs,
			"--font-size"		: $font-size-xs
		),
		xs: (
			"--height"			: $_button-height-xxs,
			"--padding-inline"	: $_button-gap-xxs,
			"--font-size"		: $font-size-xxs
		)
	)

);

///      Input map                                Output
/// ----------------------            --------------------------------
/// ("--width" : $val)     --> prints [ --prefix-width: #{$val};     ]
/// ("width"  : "--")      --> prints [ width : var(--prefix-width); ]
/// ("height" : "--width") --> prints [ height: var(--prefix-width); ]
/// ("height" : 50px)      --> prints [ height: 50px; ]
/// ("hover"  : (...))     --> maps are skipped
@mixin mx-define-css-vars($map, $prefix) {

	@each $key, $value in $map {

		@if type-of($value) != 'map' {

			@if type-of($key) == 'string' and str-index($key, '--') == 1 {

				$cssVarName: str-slice($key, 3); // '--'.length = 2
				--#{$prefix}-#{$cssVarName}: #{$value};

			} @else if (type-of($value) == 'string' and str-index($value, '--') == 1) {

				$cssVarName: str-slice($value, 3); // '--'.length = 2
				$val : if(string.length($cssVarName) == 0, $key, $cssVarName);
				@debug $key $value $cssVarName string.length($cssVarName) $val;
				#{$key}: var(--#{$prefix}-#{$val});

			} @else {

				#{$key}: $value;

			}

		}

	}

}

@mixin mx-button {

	@include mx-define-css-vars($_button-properties, $_prefix);
	@include mx-d-inline-flex-center;
	@include mx-transition-short(color background-color border-color);

	svg {

		width	: 1.1em;
		height	: 1.1em;

	}

	&:focus-visible {
		@include mx-outline;
	}

	&:hover {
		@include mx-define-css-vars(map-get($_button-properties, hover), $_prefix);
	}

	&:active {
		@include mx-define-css-vars(map-get($_button-properties, active), $_prefix);
	}

	&.sm {
		@include mx-define-css-vars(map-get($_button-properties, sm), $_prefix);
	}

	&.xs {
		@include mx-define-css-vars(map-get($_button-properties, xs), $_prefix);
	}

	&[disabled] {

		@include mx-define-css-vars(map-get($_button-properties, disabled), $_prefix);

		&:hover {
			@include mx-define-css-vars(map-get($_button-properties, disabled, hover), $_prefix);
		}

		&:active {
			@include mx-define-css-vars(map-get($_button-properties, disabled, active), $_prefix);
		}

	}

	&.info {

		@include mx-define-css-vars(map-get($_button-properties, info), $_prefix);

		&:hover {
			@include mx-define-css-vars(map-get($_button-properties, info, hover), $_prefix);
		}

		&:active {
			@include mx-define-css-vars(map-get($_button-properties, info, active), $_prefix);
		}

	}

	&.warn {

		@include mx-define-css-vars(map-get($_button-properties, warn), $_prefix);

		&:hover {
			@include mx-define-css-vars(map-get($_button-properties, warn, hover), $_prefix);
		}

		&:active {
			@include mx-define-css-vars(map-get($_button-properties, warn, active), $_prefix);
		}

	}

	&.danger {

		@include mx-define-css-vars(map-get($_button-properties, danger), $_prefix);

		&:hover {
			@include mx-define-css-vars(map-get($_button-properties, danger, hover), $_prefix);
		}

		&:active {
			@include mx-define-css-vars(map-get($_button-properties, danger, active), $_prefix);
		}

	}

	&.ghost {

		@include mx-define-css-vars(map-get($_button-properties, ghost), $_prefix);

		&:hover {
			@include mx-define-css-vars(map-get($_button-properties, ghost, hover), $_prefix);
		}

		&:active {
			@include mx-define-css-vars(map-get($_button-properties, ghost, active), $_prefix);
		}

	}

	&.link {

		@include mx-define-css-vars(map-get($_button-properties, link), $_prefix);

		&:hover {
			@include mx-define-css-vars(map-get($_button-properties, link, hover), $_prefix);
		}

		&:active {
			@include mx-define-css-vars(map-get($_button-properties, link, active), $_prefix);
		}

	}

	&.glyph {

		@include mx-define-css-vars(map-get($_button-properties, glyph), $_prefix);

		&:hover {
			@include mx-define-css-vars(map-get($_button-properties, glyph, hover), $_prefix);
		}

		&:active {
			@include mx-define-css-vars(map-get($_button-properties, glyph, active), $_prefix);
		}

		&.squared {
			@include mx-define-css-vars(map-get($_button-properties, glyph, squared), $_prefix);
		}

	}

	&.tag {

		@include mx-define-css-vars(map-get($_button-properties, tag), $_prefix);

		&:hover {
			@include mx-define-css-vars(map-get($_button-properties, tag, hover), $_prefix);
		}

		&:active {
			@include mx-define-css-vars(map-get($_button-properties, tag, active), $_prefix);
		}

		&.sm {
			@include mx-define-css-vars(map-get($_button-properties, tag, sm), $_prefix);
		}

		&.xs {
			@include mx-define-css-vars(map-get($_button-properties, tag, xs), $_prefix);
		}

	}

}

button,
.button {

	@include mx-button;

}
