@function is-number-between-0-and-1($value) {

	@if not (type-of($value) == 'number' and $value >= 0 and $value <= 1 and unit($value) == '') {

		@error "Invalid value: #{$value}. Expected 0 <= value <= 1 with no unit.";

	}
	@return $value;

}

@function is-percentage-with-sign($value) {

	@if type-of($value) == 'number' and unit($value) == '%' and $value >= -100% and $value <= 100% {

		@return $value;

	}
	@error "Invalid value: #{$value}. Expected -100% <= value <= 100% including unit (%).";

}


@function percentage-to-decimal($percentage) {

	@return calc(is-percentage-with-sign($percentage) / 100%);

}

@function isCSSVar($variable) {

	// todo add error message
	$result: type-of($variable) == 'string' and str-index($variable, '--') == 1 and global-variable-exists(str-slice($variable, 3));
	@return $result;

}

/// $name		-> --col-bg
/// returns		=> var(--col-bg)
@function fn-var($name) {

	@if isCSSVar($name) {

		@return var($name);

	} @else {

		@error "The variable #{$name} is not defined!";

	}

}

@function fn-color-set-alpha($name, $value) {

	$value : is-number-between-0-and-1($value);
	@return hsl(from fn-var($name) h s l / $value);

}

@function fn-color-lighten($name, $value, $alpha: null) {

	$value : percentage-to-decimal($value);
	$alpha-str: if($alpha, "/" + is-number-between-0-and-1($alpha), null);
	@return hsl(from fn-var($name) h s calc(l * #{calc(1 + $value)}) #{ $alpha-str });

}

@function fn-color-darken($name, $value, $alpha: null) {

	$value : percentage-to-decimal($value);
	$alpha-str: if($alpha, "/" + $alpha, null);
	@return hsl(from fn-var($name) h s calc(l * #{calc(1 - $value)}) #{ $alpha-str });

}

@mixin mx-set-var($key, $value) {

	@if isCSSVar($key) {

		#{$key}: $value;

	} @else {

		@error "The variable #{$key} is not defined!";

	}

}
