@function isCSSVar($variable) {

	// @debug $variable;
	$result: type-of($variable) == 'string' and str-index($variable, '--') == 1 and global-variable-exists(str-slice($variable, 3));
	// @debug $result;
	@return $result;

}

/// $name		-> --col-bg
/// returns		=> var(--col-bg)
@function fn-var($name) {

	@if isCSSVar($name) {

		@return var($name);

	} @else {

		@error "The variable #{$name} is not defined!";

	}

}

/// $name		-> --col-bg
/// $percentage	-> 20%
/// returns		=> color-mix(in hsl, var(--col-bg), transparent 20%)
@function fn-color-mix-alpha($name, $percentage) {

	@return color-mix(in hsl, fn-var($name), fn-var($col-transparent) $percentage);

}

/// $name		-> --col-bg
/// $percentage	-> 20%
/// returns		=> color-mix(in hsl, var(--col-bg), white 20%)
@function fn-color-mix-lighten($name, $percentage) {

	@return color-mix(in hsl, fn-var($name), fn-var($col-white) $percentage);

}

/// $name		-> --col-bg
/// $percentage	-> 20%
/// returns		=> color-mix(in hsl, var(--col-bg), black 20%)
@function fn-color-mix-darken($name, $percentage) {

	@return color-mix(in hsl, fn-var($name), fn-var($col-black) $percentage);

}

@mixin mx-set-var($key, $value) {

	@if isCSSVar($key) {

		#{$key}: $value;

	} @else {

		@error "The variable #{$key} is not defined!";

	}

}
